{
    parameters: [
    
    
    //Custom Queries
    //powershell
    { "name": "powershell",  "options": {"display": "hidden"}, "defaultValue": "indicator.name = 'PowershellExecution' OR src.process.name='powershell.exe'" } ,
    { "name": "powershell-requirement",   "options": {"display": "hidden"},  "defaultValue": "32" } ,
    
    //cmd
    { "name": "cmd", "options": {"display": "hidden"},  "defaultValue": "(indicator.name = 'CmdInteractiveCommand' OR src.process.name = 'cmd.exe')"  } ,
    { "name": "cmd-requirement", "options": {"display": "hidden"}, "defaultValue": "31"} ,
    
    //event process creation
    { "name": "event-process-creation", "options": {"display": "hidden"},  "defaultValue": "event.type = 'Process Creation'"  } ,
    { "name": "event-process-creation-requirement", "options": {"display": "hidden"}, "defaultValue": "25"} ,
    
    //remote login logoff
    { "name": "remote-login-logoff", "options": {"display": "hidden"},  "defaultValue": "event.type in ('Login', 'Logout') event.login.type in ('REMOTE_INTERACTIVE', 'CACHED_REMOTE_INTERACTIVE')"  } ,
    { "name": "remote-login-logoff-requirement", "options": {"display": "hidden"}, "defaultValue": "26"} ,
    
    //os login logoff
    { "name": "os-login-logoff", "options": {"display": "hidden"},  "defaultValue": "event.type in ('Login', 'Logout')"  } ,
    { "name": "os-login-logoff-requirement", "options": {"display": "hidden"}, "defaultValue": "27"} ,
    
    //active network communication
    { "name": "active-network-communication", "options": {"display": "hidden"},  "defaultValue": "event.category = 'ip'"  } ,
    { "name": "active-network-communication-requirement", "options": {"display": "hidden"}, "defaultValue": "30"} ,
    
    //service status changes
    { "name": "service-status-changes", "options": {"display": "hidden"},  "defaultValue": "indicator.name in ('ServiceCreate', 'ServiceStopped', 'ServiceModified')"  } ,
    { "name": "service-status-changes-requirement", "options": {"display": "hidden"}, "defaultValue": "29"} ,
    
    //scheduled task changes
    { "name": "scheduled-task-changes", "options": {"display": "hidden"},  "defaultValue": "event.type = 'Task Update'"  } ,
    { "name": "scheduled-task-changes-requirement", "options": {"display": "hidden"}, "defaultValue": "28"} ,
    
    //WMI events
    { "name": "wmi-events", "options": {"display": "hidden"},  "defaultValue": "indicator.name contains 'wmi'"  } ,
    { "name": "wmi-events-requirement", "options": {"display": "hidden"}, "defaultValue": "33"} 

    //vars
    { "name": "req_lookup",  options: {display: "hidden"},  defaultValue: "lookup Log, Category, Criticality from m2131.csv by id=id"} ,
    //teamToken
    { "name": "teamToken",  options: {display: "hidden"},  defaultValue: "teamToken=gl0x8x8QTnHZBlSweFJgvg--"} ,

  ], 
  graphs: [
    {
      graphStyle: "honeycomb",
      title: "At a Glance",
      honeyCombColor: {
        hover: "#B9E885",
        label: "Green",
        value: "#6DB222"
      },
      honeyCombGroupBy: "",
      honeyCombLinkTo: "",
      honeyCombThresholds: ["0", "1", "2", "10"],
      query: "|left join \nreq = (timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id \n| filter Category = *  AND Category  contains (\"Operating Systems\")\n),\n\nall = (\n| union \n(\n     #powershell#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10)| let id = \"#powershell-requirement#\"\n     | lookup Log, Category, Criticality from m2131.csv by id=id | columns Number_of_Logs, serverHost, id, Log, query = \"#powershell#\"\n),\n(\n     #cmd#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#cmd-requirement#\"\n     | #req_lookup#\n),\n(\n     #event-process-creation#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#event-process-creation-requirement#\"\n     | #req_lookup#\n),\n(\n     #remote-login-logoff#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#remote-login-logoff-requirement#\"\n     | #req_lookup#\n),\n(\n     #os-login-logoff#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#os-login-logoff-requirement#\"\n     | #req_lookup#\n),\n(\n     #active-network-communication#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#active-network-communication-requirement#\"\n     | #req_lookup#\n),\n(\n     #service-status-changes#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#service-status-changes-requirement#\"\n     | #req_lookup#\n),\n(\n     #scheduled-task-changes#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#scheduled-task-changes-requirement#\"\n     | #req_lookup#\n),\n(\n     #wmi-events#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#wmi-events-requirement#\"\n     | #req_lookup#\n)\n\n| columns Logs = Number_of_Logs = 'null' ? 0 : Number_of_Logs, Category, Log, type_uid = \"null\", \"Host(s)\" = serverHost, query\n)\n\non Log, Category\n\n| columns Category, query, Log, Logs\n\n\n\n",
      layout: {
  h: 14,
  i: "0",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 4
}
    ,
    },
    {
      graphStyle: "",
      title: "Operating System (EDR)",
      query: "|left join \nreq = (timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id \n| filter Category = *  AND Category  contains (\"Operating Systems\")\n),\n\nall = (\n| union \n(\n     #powershell#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10)| let id = \"#powershell-requirement#\"\n     | #req_lookup#\n),\n(\n     #cmd#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#cmd-requirement#\"\n     | #req_lookup#\n),\n(\n     #event-process-creation#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#event-process-creation-requirement#\"\n     | #req_lookup#\n),\n(\n     #remote-login-logoff#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#remote-login-logoff-requirement#\"\n     | #req_lookup#\n),\n(\n     #os-login-logoff#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#os-login-logoff-requirement#\"\n     | #req_lookup#\n),\n(\n     #active-network-communication#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#active-network-communication-requirement#\"\n     | #req_lookup#\n),\n(\n     #service-status-changes#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#service-status-changes-requirement#\"\n     | #req_lookup#\n),\n(\n     #scheduled-task-changes#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#scheduled-task-changes-requirement#\"\n     | #req_lookup#\n),\n(\n     #wmi-events#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#wmi-events-requirement#\"\n     | #req_lookup#\n)\n\n| columns Logs = Number_of_Logs = 'null' ? 0 : Number_of_Logs, Category, Log, type_uid = \"null\",  serverHost\n)\n\non Log, Category\n\n| columns Category, Log, Logs, \"Host(s)\" = serverHost\n\n\n\n",
      showBarsColumn: "false",
      layout: {
  h: 14,
  i: "1",
  minH: 3,
  minW: 6,
  w: 60,
  x: 0,
  y: 18
}
    },
    {
      graphStyle: "markdown",
      title: "Pages",
      layout: {
  h: 4,
  i: "2",
  minH: 3,
  minW: 6,
  w: 60,
  x: 0,
  y: 0
},
      markdown: "### [OCSF](/dashboards/M-21-31%20-%20EL1?startTime=7+d&teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Operating Systems](/dashboards/M-21-31%20-%20EL1%20-%20EDR?teamToken=gl0x8x8QTnHZBlSweFJgvg--&view=edr)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Network Device Infrastructure](/dashboards/M-21-31%20-%20EL1%20-%20Network?teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Cloud](/dashboards/M-21-31%20-%20EL1%20-%20Cloud?teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[OCSF Sources](/dashboards/z%20OCSF?startTime=1+h&teamToken=gl0x8x8QTnHZBlSweFJgvg--)\n\n"
    },
    {
      graphStyle: "",
      title: "CISA Requirements (Criticality 0)",
      query: "timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id\n| columns Criticality, Category, Log, id\n| filter Category = *  AND Category  contains \"Operating System\"\n| columns Criticality, Category, Log\n",
      showBarsColumn: "false",
      layout: {
  h: 14,
  w: 30,
  x: 30,
  y: 4
}
    ,
    }
  ]
}
