{
    parameters: [
    
    
    //Custom Queries
    //Cloud Trail
    { "name": "ct",  "options": {"display": "hidden"}, "defaultValue": "dataSource.name = 'CloudTrail'" } ,
    { "name": "ct-requirement",   "options": {"display": "hidden"},  "defaultValue": "39" },
    
    //Azure Active Directory
    { "name": "aad",  "options": {"display": "hidden"}, "defaultValue": "dataSource.name = 'Azure Active Directory'" },
    { "name": "aad-requirement",   "options": {"display": "hidden"},  "defaultValue": "40" },
    
    //Azure 
    { "name": "eh",  "options": {"display": "hidden"}, "defaultValue": "dataSource.name matches 'Event Hub' OR dataSource.name matches 'EventHub'" },
    { "name": "eh-requirement",   "options": {"display": "hidden"},  "defaultValue": "41" },
    
    //O365 
    { "name": "o365",  "options": {"display": "hidden"}, "defaultValue": "dataSource.name = 'Microsoft O365'" } ,
    { "name": "o365-requirement",   "options": {"display": "hidden"},  "defaultValue": "42" },
      
    //Google Cloud Platform (GCP) 
    { "name": "gcp",  "options": {"display": "hidden"}, "defaultValue": "dataSource.name = 'PubSub' OR dataSource.name = 'Pub Sub' OR tag contains 'PubSub'" },
    { "name": "gcp-requirement",   "options": {"display": "hidden"},  "defaultValue": "42" },
    
    //vars
    { "name": "req_lookup",  options: {display: "hidden"},  defaultValue: "lookup Log, Category, Criticality from m2131.csv by id=id"} ,

  ], 
  graphs: [
    {
      graphStyle: "",
      title: "Operating System (EDR)",
      query: "\n|left join \nreq = (timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id \n| filter Category = *  AND Category  contains (\"Cloud\", \"AWS\", \"GCP\", \"Microsoft 365\")\n),\n\nall = (\n| union \n(\n     #ct#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10)| let id = \"#ct-requirement#\"\n     | #req_lookup#\n),\n(\n     #aad#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#aad-requirement#\"\n     | #req_lookup#\n),\n(\n     #eh#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#eh-requirement#\"\n     | #req_lookup#\n), \n(\n     #o365#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#o365-requirement#\"\n     | #req_lookup#\n),\n(\n     #gcp#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#gcp-requirement#\"\n     | #req_lookup#\n\n)\n\n| columns Logs = Number_of_Logs = 'null' ? 0 : Number_of_Logs, Category, Log, type_uid = \"null\", \"Host(s)\" = serverHost\n)\n\non Log, Category\n\n| columns Category, Log, Logs\n\n\n\n",
      showBarsColumn: "false",
      layout: {
  h: 14,
  i: "0",
  minH: 3,
  minW: 6,
  w: 60,
  x: 0,
  y: 18
}
    },
    {
      graphStyle: "markdown",
      title: "Pages",
      layout: {
  h: 4,
  i: "1",
  minH: 3,
  minW: 6,
  w: 60,
  x: 0,
  y: 0
},
      markdown: "### [OCSF](/dashboards/M-21-31%20-%20EL1?startTime=7+d&teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Operating Systems](/dashboards/M-21-31%20-%20EL1%20-%20EDR?teamToken=gl0x8x8QTnHZBlSweFJgvg--&view=edr)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Network Device Infrastructure](/dashboards/M-21-31%20-%20EL1%20-%20Network?teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[Cloud](/dashboards/M-21-31%20-%20EL1%20-%20Cloud?teamToken=gl0x8x8QTnHZBlSweFJgvg--)&nbsp;&nbsp;&nbsp;&nbsp;**|**&nbsp;&nbsp;&nbsp;&nbsp;[OCSF Sources](/dashboards/z%20OCSF?startTime=1+h&teamToken=gl0x8x8QTnHZBlSweFJgvg--)\n\n"
    },
    {
      graphStyle: "",
      title: "CISA Requirements (Criticality 0)",
      query: "timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id\n| columns Criticality, Category, Log, id\n| filter Category = *  AND Category  contains (\"Cloud\", \"AWS\", \"GCP\", \"Microsoft 365\")\n| columns Criticality, Category, Log\n",
      showBarsColumn: "false",
      layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 30,
  x: 30,
  y: 4
}
    ,
    },
    {
      graphStyle: "honeycomb",
      honeyCombColor: {
        hover: "#B9E885",
        label: "Green",
        value: "#6DB222"
      },
      honeyCombGroupBy: "",
      honeyCombLinkTo: "",
      honeyCombThresholds: ["0", "1", "2", "10"],
      layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 4
},
      query: "\n|left join \nreq = (timestamp = *\n| limit 1000\n| group c = running_count() by timestamp\n| let id = format(\"%d\", c)\n| lookup Log, Category, Criticality from m2131.csv by id=id \n| filter Category = *  AND Category  contains (\"Cloud\", \"AWS\", \"GCP\", \"Microsoft 365\")\n),\n\nall = (\n| union \n(\n     #ct#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10)| let id = \"#ct-requirement#\"\n     | #req_lookup#\n),\n(\n     #aad#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#aad-requirement#\"\n     | #req_lookup#\n),\n(\n     #eh#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#eh-requirement#\"\n     | #req_lookup#\n), \n(\n     #o365#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#o365-requirement#\"\n     | #req_lookup#\n),\n(\n     #gcp#\n     | group Number_of_Logs = count(), serverHost = array_agg_distinct(endpoint.name, 10) | let id = \"#gcp-requirement#\"\n     | #req_lookup#\n\n)\n\n| columns Logs = Number_of_Logs = 'null' ? 0 : Number_of_Logs, Category, Log, type_uid = \"null\", \"Host(s)\" = serverHost\n)\n\non Log, Category\n\n| columns Category, Log, Logs\n\n\n\n",
      title: "At a Glance"
    }
  ]
}
